#https://github.com/orgs/community/discussions/26724
name: Docker Build and Publish

on:
  workflow_run:
    workflows: ["Lint and Test"]
    types: [completed]
  release:
    types: [published]
  # Manual triggers for testing
  workflow_dispatch:

env:
  REGISTRY_IMAGE: kinorai/prompt-keeper

jobs:
  versioning:
    name: Versioning
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    permissions:
      contents: write
    outputs:
      skipped: ${{ steps.changelog.outputs.skipped }}
      version: ${{ steps.changelog.outputs.tag }}

    steps:
      - name: Checkout main branch with full history
        uses: actions/checkout@v4
        with:
          ref: 'main'
          fetch-depth: 0

      - name: Conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Build Platform-Specific Images
    runs-on: ${{ matrix.platform == 'linux/arm64' && 'ubuntu-24.04-arm' || 'ubuntu-latest' }}
    if: (github.event.workflow_run.conclusion == 'success') || (github.event_name == 'release')
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.head_sha || github.sha }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            # PR builds - no tags (build only)
            type=raw,value=pr-test,enable=${{ github.event.workflow_run.event == 'pull_request' }}
            # Develop branch - 'dev' tag
            type=raw,value=dev,enable=${{ github.event.workflow_run.head_branch == 'develop' }}
            # Main branch - 'latest' tag
            type=raw,value=latest,enable=${{ github.event.workflow_run.head_branch == 'main' }}
            # Releases - semantic version tags
            type=semver,pattern={{version}},enable=${{ github.event_name == 'release' }}
            type=semver,pattern={{major}}.{{minor}},enable=${{ github.event_name == 'release' }}
            type=semver,pattern={{major}},enable=${{ github.event_name == 'release' }}

      - name: Login to Docker Hub
        if: github.event.workflow_run.event != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
          # Only push if NOT a PR (build-only for PRs)
          push: ${{ github.event.workflow_run.event != 'pull_request' }}
          outputs: type=image,push-by-digest=${{ github.event.workflow_run.event != 'pull_request' }},name-canonical=true,push=${{ github.event.workflow_run.event != 'pull_request' }}
          cache-from: type=gha,scope=buildkit-${{ matrix.platform }}
          cache-to: type=gha,mode=max,scope=buildkit-${{ matrix.platform }}

      - name: Export digest
        if: github.event.workflow_run.event != 'pull_request'
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        if: github.event.workflow_run.event != 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    name: Merge and Push Multi-Platform Image
    runs-on: ubuntu-latest
    if: github.event.workflow_run.event != 'pull_request'
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            # Develop branch - 'dev' tag
            type=raw,value=dev,enable=${{ github.event.workflow_run.head_branch == 'develop' }}
            # Main branch - 'latest' tag
            type=raw,value=latest,enable=${{ github.event.workflow_run.head_branch == 'main' }}
            # Releases - semantic version tags
            type=semver,pattern={{version}},enable=${{ github.event_name == 'release' }}
            type=semver,pattern={{major}}.{{minor}},enable=${{ github.event_name == 'release' }}
            type=semver,pattern={{major}},enable=${{ github.event_name == 'release' }}

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:$(echo "${{ steps.meta.outputs.tags }}" | head -n1)
