name: Continuous Integration

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # Setup job - checkout code, setup Node.js, install dependencies
  setup:
    name: Setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      # First try to restore the cache
      - name: Restore node_modules cache
        id: cache-node-modules-restore
        uses: actions/cache/restore@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}

      # Only run npm ci if cache doesn't exist
      - name: Install dependencies
        if: steps.cache-node-modules-restore.outputs.cache-hit != 'true'
        run: npm ci --prefer-offline --no-audit

      # Save the cache if we had to install dependencies
      - name: Save node_modules cache
        if: steps.cache-node-modules-restore.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}

  # Lint job - run all linting tasks
  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      # Restore cached node_modules
      - name: Restore node_modules
        uses: actions/cache/restore@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}

      # Commit linting - skip for dependabot
      - name: Validate current commit (last commit) with commitlint
        if: github.event_name == 'push' && github.actor != 'dependabot[bot]'
        run: npx commitlint --last --verbose

      - name: Validate PR commits with commitlint
        if: github.event_name == 'pull_request' && github.actor != 'dependabot[bot]'
        run: npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose

      # Code quality checks
      - name: Check formatting
        run: npx prettier --check "src/**/*.{ts,tsx,js,jsx,json,css}"

      - name: Run linting
        run: npm run lint

      - name: Type check
        run: npx tsc --noEmit

  # Test job - run tests
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      # Restore cached node_modules
      - name: Restore node_modules
        uses: actions/cache/restore@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Run tests
        run: npm run test

  # Build job - build the application
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      # Restore cached node_modules
      - name: Restore node_modules
        uses: actions/cache/restore@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Build application
        run: npm run build
