config:
  API_HOST: ""
  FRONT_HOST: ""
  DEMO_PROMPT_SAVER_API_HOST: ""
  DEMO_PROMPT_SAVER_FRONT_HOST: ""

defaultPodOptions:
  automountServiceAccountToken: false
  securityContext:
    fsGroup: 1001
    fsGroupChangePolicy: "OnRootMismatch"
    runAsGroup: 1001
    runAsNonRoot: true
    runAsUser: 1001
    seccompProfile:
      type: RuntimeDefault
    seLinuxOptions: {}

defaultContainerSecurityContext: &defaultContainerSecurityContext
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  privileged: false
  readOnlyRootFilesystem: true

  front:
    enabled: true
    type: deployment
    strategy: RollingUpdate
    revisionHistoryLimit: 20
    containers:
      front:
        image:
          repository : ""
          tag: 1
          pullPolicy: Always
        env:
          - name: API_BASE_URL
            value: "http://{{.Release.Name}}-api.{{.Release.Namespace}}.svc.cluster.local:8000"
        envFrom:
          - secret: common
          - secret: front
        ports:
          - containerPort: 3000
        resources:
          requests:
            cpu: 10m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 256Mi
        probes:
          liveness:
            enabled: true
            spec:
              httpGet:
                path: /
                port: http
              initialDelaySeconds: 5
              periodSeconds: 5
              timeoutSeconds: 5
          readiness:
            enabled: true
            spec:
              httpGet:
                path: /
                port: http
              initialDelaySeconds: 5
              periodSeconds: 5
              timeoutSeconds: 5
        # Additional security hardening for nginx
        securityContext: *defaultContainerSecurityContext

  api:
    enabled: true
    type: deployment
    strategy: RollingUpdate
    revisionHistoryLimit: 20
    containers:
      api:
        image:
          repository : ""
          tag: 1
          pullPolicy: Always
        envFrom:
          - secret: api
          - secret: common
        ports:
          - containerPort: 8000
        # resources:
        #   requests:
        #     cpu: 10m
        #     memory: 64Mi
        #   limits:
        #     cpu: 500m
        #     memory: 512Mi
        probes:
          liveness:
            enabled: true
            spec:
              httpGet:
                path: /
                port: http
              initialDelaySeconds: 5
              periodSeconds: 5
              timeoutSeconds: 5
          readiness:
            enabled: true
            spec:
              httpGet:
                path: /
                port: http
              initialDelaySeconds: 5
              periodSeconds: 5
              timeoutSeconds: 5
        # Additional security hardening for nginx
        securityContext: *defaultContainerSecurityContext


service:
  front:
    enabled: true
    controller: front
    type: ClusterIP
    ports:
      http:
        port: 3000

  api:
    enabled: true
    controller: api
    type: ClusterIP
    ports:
      http:
        port: 8000


ingress:
  front:
    enabled: true
    className: nginx
    annotations:
      nginx.ingress.kubernetes.io/proxy-body-size: 9m
      nginx.ingress.kubernetes.io/proxy-buffer-size: 128k
    hosts:
      - host: "{{ .Values.config.FRONT_HOST }}"
        paths:
          - path: /
            pathType: ImplementationSpecific
            service:
              identifier: front
              port: http
    tls: []

  api:
    enabled: true
    className: nginx
    annotations:
      nginx.ingress.kubernetes.io/proxy-body-size: 9m
      nginx.ingress.kubernetes.io/proxy-buffer-size: 128k
    hosts:
      - host: "{{ .Values.config.API_HOST }}"
        paths:
          - path: /
            pathType: ImplementationSpecific
            service:
              identifier: api
              port: http
    tls: []

secrets:
  # Secrets are used instead of ConfigMaps because pods are automatically reloaded when Secrets change, unlike ConfigMaps
  api:
    enabled: true
    stringData:
      POSTGRES_USER: "prompt_saver"
      POSTGRES_PASSWORD: "prompt_saver"
      POSTGRES_DB: "prompt_saver"
      POSTGRES_HOST: "postgres-postgresql.postgres.svc.cluster.local"
      POSTGRES_PORT: "5432"
      OPENAI_API_KEY: "your-openai-api-key"
      ANTHROPIC_API_KEY: "your-anthropic-api-key"
      GOOGLE_API_KEY: "your-google-api-key"
      AVAILABLE_MODELS: "anthropic/claude-3-5-haiku-latest,anthropic/claude-3-5-sonnet-latest,chatgpt-4o-latest,o1-preview,o1-mini,google_genai.gemini-exp-1206,google_genai.gemini-2.0-flash-exp,dall-e-3,whisper-1"
      CORS_ORIGINS: ""
  common:
    enabled: true
    stringData:
      API_KEY: "1234567890"
  front:
    enabled: true
    stringData:
      ADMIN_EMAIL: "admin@example.com"
      ADMIN_PASSWORD: "your-secure-password"
